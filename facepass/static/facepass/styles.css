@import url('https://fonts.googleapis.com/css?family=IBM+Plex+Sans&display=swap');

body {
  margin: 0;
  padding: 0;
  width: 100vw;
  height: 100vh;
  -webkit-font-smoothing: antialiased;
  font-family: 'IBM Plex Sans', sans-serif;    
  font-weight: lighter;
  font-size: 16px;
}

header, h1 {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 1.5em;
}

#detector {
  display: flex;
  justify-content: center;
  align-items: center;
}

canvas {
  /* will overlay the video and therefore its position will be handled in an absolute way */
  position: absolute;
}


#apps {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    margin-top: 25px;
}

#apps button {
  color: white;
  padding: 15px 32px;
  font-size: 16px;
  margin: 4px 2px;
  cursor: pointer;
  background-color: white;
  color: black;
  border: 2px solid #555555;
}


#infobar button {
    display: block;
    cursor: pointer;
    color: white;
    background-color: black;
    font-size: 1em;
    border: none;
    width: 20em;
    height: 3em;
    text-align: center;
    margin: 2em auto;
}

#infobar input {
    display: block;
    width: 20em;
    height: 2em;
    margin: 1em 0;
    font-size: 1em;
}


#infobar label {
    display: block;
    width: 20em;
    font-weight: bold;
}

#status {
    font-size: 1.25rem;
}

img {
    width: 100%;
    height: auto;
}

p[id^="information"], #question {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

#question {
    font-size: 1rem;
    font-weight: bold;
    margin-top: 2rem;
}



/* Eliminating the bullets from the unordered list */
#infobar ul {
    display: flex;
    flex-direction: column;
    list-style-type: none;
    justify-content: center;
    align-items: center;
    padding: 0;
}
#infobar li {
    padding: 0 15px;
}

.show {
    visibility: visible
}

.hide {
    visibility: hidden
}

.main {
    width: 100vw;
    max-width: 60rem;
    margin-left: auto;
    margin-right: auto;
    padding: 1rem;
}


.container {
    width: 100%;
    margin: 0;
    max-width: 100%;
}

.btn {
    margin: 0.25rem;
}

input[id^="id"] {
    display: block;
    width: 100%;
    max-width: 60rem;
    height: calc(1.5em + .75rem + 2px);
    padding: .375rem .75rem;
    font-size: 1rem;
    font-weight: 400;
    line-height: 1.5;
    color: #495057;
    background-color: #fff;
    background-clip: padding-box;
    border: 1px solid #ced4da;
    border-radius: .25rem;
    transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
}
input[id^="id"]:focus {
    color: #495057;
    background-color: #fff;
    border-color: #80bdff;
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgb(0 123 255 / 25%);
}

.input-width, .alert {
    max-width: 60rem;
}

button.edit {
    margin: 1rem 0;
}

button.like {
    font-size: 0.8rem;
    color: #007BFF;
}

button.like:hover {
    text-decoration: underline;
}

textarea {
    min-height: 6rem;
    margin-bottom: 1rem;
}


hr {
    margin: 0.5rem;
}

article {
    margin: 0;
    padding: 1rem;
}


.header {
    margin: 0;
    padding: 0;
    font-size: 1.25rem;
}

p  {
    margin: 0;
    padding: 0;
}

p.content {
    font-size: 1.15rem;
}

p.permissions, p.secondary {
    font-size: 1rem;
    color: #414141;
    margin: 0.25rem 0;
}

p.timestamp {
    font-size: 0.8rem;
    color: #414141;
    margin: 0.25rem 0;
}

p.error {
    font-size: 0.8rem;
    color:crimson;
    margin: 0.25rem 0;
}

ul.errorlist {
    list-style-type: none;
    font-size: 0.8rem;
    color:crimson;
    margin: 0;
    padding: 0;
}

/* Global text effects */
.semibold {
    font-weight: bold;
}
  
.light {
    font-weight: lighter;
}
  
.normal {
    font-weight: normal;
}


/*  Utilties */
.truncate {
    display: block;
    margin: auto 1.5em;
    white-space: nowrap;
    overflow: hidden;
    
}

.wrap {
    word-wrap: break-word;
    -webkit-hyphens: auto;
     -moz-hyphens: auto;
          hyphens: auto;
}

.reset-margin {
    margin: 0
}

.reset-padding {
    padding:0;
}

/* Short block with text*/
/* styles for '...' */ 
.block-with-text {
    /* hide text if it more than N lines  */
    overflow: hidden;
    /* for set '...' in absolute position */
    position: relative; 
    /* use this value to count block height */
    line-height: 1.2em;
    /* max-height = line-height (1.2) * lines max number (3) */
    max-height: 2.5em;/*7.5em;*/ 
    height:2.5em;
    /* fix problem when last visible word doesn't adjoin right side  */
    text-align: justify;  
    /* place for '...' */
    margin-right: -0.7em;
    padding-right: 0.7em;
    max-width: inherit;
    word-wrap: break-word;
  }
  /* create the ... if needed*/
  .block-with-text:before {
    /* points in the end */
    content: '';
    /* absolute position */
    position: absolute;
    /* set position to right bottom corner of block */
    right: 0;
    bottom: 0;
  }
  /* hide ... if we have text, which is less than or equal to max lines */
  .block-with-text:after {
    /* points in the end */
    content: '';
    /* absolute position */
    position: absolute;
    /* set position to right bottom corner of text */
    right: 0;
    /* set width and height */
    width: 1em;
    height: 1em;
    margin-top: 0.2em;
    /* bg color = bg color under block */
    background: white;
  }


